/*! tulip - v0.1.1 - 2013-08-20
 * https://github.com/MinnPost/tulip
 * Copyright (c) 2013 Alan Palazzolo; Licensed MIT
 */

this.Tulip=this.Tulip||{},this.Tulip.templates=this.Tulip.templates||{},this.Tulip.templates["app/templates/application.html"]=function(obj){obj||(obj={});var __p="";with(_.escape,obj)__p+='<div class="tulip-app-container">\n  <div class="tulip-map-container">\n    <div class="tulip-map"></div>\n  </div>\n  \n  <div class="tulip-config-container">\n  \n  </div>\n</div>';return __p},this.Tulip.templates["app/templates/attribute-picker.html"]=function(obj){obj||(obj={});var __t,__p="";with(_.escape,Array.prototype.join,obj)__p+='<div class="tulip-attribute-picker-picker">\n  ',_.each(attributes,function(a,b){__p+='\n    <div class="tulip-attribute cf">\n      <label data-attribute="'+(null==(__t=b)?"":__t)+'">'+(null==(__t=b)?"":__t)+'</label>\n      \n      <input type="text" data-type="'+(null==(__t=a)?"":__t)+'" value="'+(null==(__t=values[b]?values[b]:"")?"":__t)+'" />\n    </div>\n  '}),__p+='\n  \n  <div class="tulip-attribute-picker-done-container">\n    <a href="#" class="tulip-attribute-picker-done">Done</a>\n  </div>\n</div>';return __p},this.Tulip.templates["app/templates/configuration.html"]=function(obj){obj||(obj={});var __p="";with(_.escape,obj)__p+='<section class="tulip-configuration">\n  <h1>T<span class="tulip-u">u</span>lip <span class="tulip-beta">beta</span></h1>\n  \n  <form class="tulip-configuration-form">\n    <h2>Data</h2>\n    \n    <div class="tulip-configuration-property">\n      <div class="tulip-input-file">Drag a new GeoJSON or TopoJSON file here.</div>\n      <div class="tulip-current-file">\n        <span class="tulip-configuration-fileName"></span>, \n        <span class="tulip-configuration-fileSize"></span>\n        (<span class="tulip-configuration-fileType"></span>)\n      </div>\n    </div>\n\n    <h2>Container</h2>\n    \n    <div class="tulip-configuration-group cf">\n      <div class="tulip-configuration-property tulip-configuration-group-50">\n        <label for="tulip-configuration-width">Width:</label>\n        <input type="text" id="tulip-configuration-width" name="tulip-configuration-width" />\n      </div>\n      \n      <div class="tulip-configuration-property tulip-configuration-group-50">\n        <label for="tulip-configuration-height">Height:</label>\n        <input type="text" id="tulip-configuration-height" name="tulip-configuration-height" />\n      </div>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <p class="tulip-help">Use valid CSS styles, like 90%, 300px, or 10em.  You can use 100% or auto for the height and the map will fill the window.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesBackground">Background styles:</label>\n      <input type="text" id="tulip-configuration-stylesBackground" class="tulip-attribute-picker" name="tulip-configuration-stylesBackground" />\n      <p class="tulip-help">SVG styles for background container.</p>\n    </div>\n    \n    <div class="tulip-configuration-group cf">\n      <label for="tulip-configuration-mapOffset">Map offset:</label>\n      <p class="tulip-help">Offset of the map from the top left of the canvas.  The Map Drag interaction will automatically set this.</p>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-mapOffset0">X:</label>\n        <input type="text" id="tulip-configuration-mapOffset0" name="tulip-configuration-mapOffset0" />\n      </div>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-mapOffset1">Y:</label>\n        <input type="text" id="tulip-configuration-mapOffset1" name="tulip-configuration-mapOffset1" />\n      </div>\n    </div>\n\n    <h2>Projection</h2>\n    \n    <div class="tulip-configuration-property">\n      <select id="tulip-configuration-projection">\n      </select>\n      <p class="tulip-help">Map projections define how the surface of the earth is displayed.  The purpose of your map should drive the more appropriate projections.</p>\n    </div>\n    \n    <div class="tulip-configuration-group cf">\n      <label for="tulip-configuration-rotation">Rotation:</label>\n      <p class="tulip-help">Defines how the map is rotated or offset around the center.  <em>R</em> is the amount of rotation around the center in a counter-clockwise direction.</p>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-rotation0">X:</label>\n        <input type="text" id="tulip-configuration-rotation0" name="tulip-configuration-rotation0" />\n      </div>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-rotation1">Y:</label>\n        <input type="text" id="tulip-configuration-rotation1" name="tulip-configuration-rotation1" />\n      </div>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-rotation2">R:</label>\n        <input type="text" id="tulip-configuration-rotation2" name="tulip-configuration-rotation2" />\n      </div>\n    </div>\n    \n    <h2>Features</h2>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-styles">Feature styles:</label>\n      <input type="text" id="tulip-configuration-styles" class="tulip-attribute-picker" name="tulip-configuration-styles" />\n      <p class="tulip-help">SVG styles for each map feature.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesHover">Feature styles hover:</label>\n      <input type="text" id="tulip-configuration-stylesHover" class="tulip-attribute-picker" name="tulip-configuration-stylesHover" />\n      <p class="tulip-help">SVG styles for each map feature on hover.</p>\n    </div>\n\n    <h2>Colors</h2>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-colorOn" name="tulip-configuration-colorOn" />\n      <label for="tulip-configuration-colorOn">Color on</label>\n      <p class="tulip-help">When enabled, map features will be colored by a value in the data.  The following options are dependent on this one.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-colorScale">Color scale</label>\n      <select id="tulip-configuration-colorScale">\n      </select>\n      <p class="tulip-help">The scale method for determining how values are grouped into colors.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for"tulip-configuration-colorProperty">Color property: </label>\n      <select id="tulip-configuration-colorProperty" name="tulip-configuration-colorProperty">\n      </select>\n      <p class="tulip-help">The property in the data source that will determine how the map is colored.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for"tulip-configuration-colorSet">Color set: </label>\n      <select id="tulip-configuration-colorSet" name="tulip-configuration-colorSet">\n      </select>\n      <p class="tulip-help">The set of colors to use.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-colorReverse" name="tulip-configuration-colorReverse" />\n      <label for="tulip-configuration-colorReverse">Color reverse</label>\n      <p class="tulip-help">Whether to reverse the color set.</p>\n    </div>\n    \n    <h2>Tooltip</h2>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-tooltipOn" name="tulip-configuration-tooltipOn" />\n      <label for="tulip-configuration-tooltipOn">Tooltip on</label>\n      <p class="tulip-help">When enabled, tooltips will appear on the map when a feature is hovered over.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-tooltipContent">Tooltip content:</label>\n      <textarea type="checkbox" id="tulip-configuration-tooltipContent" name="tulip-configuration-tooltipContent" />\n      <p class="tulip-help">The template content.  You can use <a href="http://underscorejs.org/#template">Underscore templates</a> and all properties of the feature will be in the <code>p</code> variable.</p>\n    </div>\n    \n    <h2>Legend</h2>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-legendOn" name="tulip-configuration-legendOn" />\n      <label for="tulip-configuration-legendOn">Legend on</label>\n      <p class="tulip-help">When enabled, a legend will be rendered and the following options are dependent on this.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-legendTitle">Legend title:</label>\n      <input type="text" id="tulip-configuration-legendTitle" name="tulip-configuration-legendTitle" />\n      <p class="tulip-help">The title of the legend container.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-legendScale">Legend scale:</label>\n      <input type="text" id="tulip-configuration-legendScale" name="tulip-configuration-legendScale" />\n      <p class="tulip-help">The size scale of the legend.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-legendFormatter">Legend formatter:</label>\n      <input type="text" id="tulip-configuration-legendFormatter" name="tulip-configuration-legendFormatter" />\n      <p class="tulip-help">The formatter for the legend values, refer to the <a target="_blank" href="https://github.com/mbostock/d3/wiki/Formatting">D3.format</a> function.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesLegendContainer">Legend container styles:</label>\n      <input type="text" id="tulip-configuration-stylesLegendContainer" class="tulip-attribute-picker" name="tulip-configuration-stylesLegendContainer" />\n      <p class="tulip-help">SVG styles for legend container.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesLegendTitleText">Legend title styles:</label>\n      <input type="text" id="tulip-configuration-stylesLegendTitleText" class="tulip-attribute-picker" name="tulip-configuration-stylesLegendTitleText" />\n      <p class="tulip-help">SVG styles for legend title.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesLegendText">Legend text styles:</label>\n      <input type="text" id="tulip-configuration-stylesLegendText" class="tulip-attribute-picker" name="tulip-configuration-stylesLegendText" />\n      <p class="tulip-help">SVG styles for legend text.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesLegendSwatch">Legend swatch styles:</label>\n      <input type="text" id="tulip-configuration-stylesLegendSwatch" class="tulip-attribute-picker" name="tulip-configuration-stylesLegendSwatch" />\n      <p class="tulip-help">SVG styles for legend swatches.</p>\n    </div>\n    \n    <div class="tulip-configuration-group cf">\n      <label for="tulip-configuration-legendOffset">Legend offset:</label>\n      <p class="tulip-help">Offset of the legend from the top left of the canvas.  The Legend Drag interaction will automatically set this.</p>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-legendOffset0">X:</label>\n        <input type="text" id="tulip-configuration-legendOffset0" name="tulip-configuration-legendOffset0" />\n      </div>\n      \n      <div class="tulip-configuration-property">\n        <label for="tulip-configuration-legendOffset1">Y:</label>\n        <input type="text" id="tulip-configuration-legendOffset1" name="tulip-configuration-legendOffset1" />\n      </div>\n    </div>\n    \n    <h2>Interactions</h2>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-legendDragOn" name="tulip-configuration-legendDragOn" />\n      <label for="tulip-configuration-legendDragOn">Legend drag on</label>\n      <p class="tulip-help">When enabled, it allows the user to drag the legend around.  Useful for placing the legend in a custom spot for exporting.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-mapDragOn" name="tulip-configuration-mapDragOn" />\n      <label for="tulip-configuration-mapDragOn">Map drag on</label>\n      <p class="tulip-help">When enabled, it allows the user to drag the map around (just the actual map features).  Useful for placing the legend in a custom spot for exporting.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-canvasDragOn" name="tulip-configuration-canvasDragOn" />\n      <label for="tulip-configuration-canvasDragOn">Canvas drag on</label>\n      <p class="tulip-help">When enabled, it allows the user to drag the map around.  This is helpful for an interactive map.  This option will override the other dragging options.</p>\n    </div>\n    \n    <h2>Reference</h2>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-graticuleOn" name="tulip-configuration-graticuleOn" />\n      <label for="tulip-configuration-graticuleOn">Graticule on</label>\n      <p class="tulip-help">When enabled, draws a graticule grid.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesGraticule">Graticule styles:</label>\n      <input type="text" id="tulip-configuration-stylesGraticule" class="tulip-attribute-picker" name="tulip-configuration-stylesGraticule" />\n      <p class="tulip-help">SVG styles for graticule.</p>\n    </div>\n    \n    <div class="tulip-configuration-property">\n      <input type="checkbox" id="tulip-configuration-globeOn" name="tulip-configuration-globeOn" />\n      <label for="tulip-configuration-globeOn">Globe on</label>\n      <p class="tulip-help">When enabled, draws a globe outline.</p>\n    </div>\n      \n    <div class="tulip-configuration-property">\n      <label for="tulip-configuration-stylesGlobe">Globe styles:</label>\n      <input type="text" id="tulip-configuration-stylesGlobe" class="tulip-attribute-picker" name="tulip-configuration-stylesGlobe" />\n      <p class="tulip-help">SVG styles for globe.</p>\n    </div>\n    \n    <h2>Export</h2>\n    \n    <div class="tulip-configuration-property">\n      <input type="submit" class="tulip-export-image" value="Export to Image" />\n    </div>\n    \n  </form>\n  \n  <footer>\n    Tulip is brought to you by <a href="http://www.minnpost.com/" target="_blank">MinnPost</a>.  Code is on <a href="https://github.com/MinnPost/tulip" target="_blank">Github</a>.\n  </footer>\n</section>';return __p},this.Tulip.templates["app/templates/loading.html"]=function(obj){obj||(obj={});var __p="";with(_.escape,obj)__p+='<div class="tulip-loading-container">\n  <div class="tulip-loading">\n    L<span class="tulip-u">o</span>ading...\n  </div>\n</div>';return __p},function(a){window.Tulip=function(){function b(b){return this.options=_.extend(this.defaultOptions,b),this.el=this.options.el,this.$el=a(this.options.el),this.options.startManually===!1&&this.start(),this}return b.prototype.defaultOptions={startManually:!1,templatePrefix:"app/templates/"},b.prototype.start=function(){var a=this;return this.getTemplates().done(function(){a.render()}),this},b.prototype.getTemplates=function(){var b=this,c=[];return this.templates=this.templates||{},_.each(["application.html","configuration.html","loading.html","attribute-picker.html"],function(d){var e=a.get(b.options.templatePrefix+d);a.when(e).done(function(a){b.templates[d]=a}),c.push(e)}),a.when.apply(a,c)},b.prototype.defaultMapConfig=function(){var a=SimpleMapD3(),b=a.options;return b.width="100%",b.height="100%",b.rotation=[0,0,0],b.legendFormatterString=",",b.legendFormatter=d3.format(b.legendFormatterString),b.styles={stroke:"#898989","stroke-width":".4px","stroke-opacity":"0.85"},b.stylesHover={"stroke-opacity":"1","stroke-width":"2px"},b.stylesBackground={fill:"#FFFFFF"},b.stylesLegendContainer={stroke:"#222222","stroke-width":"1px",fill:"#FFFFFF","fill-opacity":"0.85"},b.stylesLegendTitleText={fill:"#222222"},b.stylesLegendText={fill:"#222222"},b.stylesLegendSwatch={},b.stylesGraticule={stroke:"#222222","stroke-width":".5px",fill:"#FFFFFF","stroke-opacity":"0.75"},b.stylesGlobe={stroke:"#222222","stroke-width":"5px",fill:"#FFFFFF"},b.tooltipContentTemplate=" <% _.each(p, function(prop, name) { %>   <%= name %>: <%= prop %> <br /> <% }) %>       ",b.tooltipContent=function(a){return _.template(b.tooltipContentTemplate)({p:a.properties})},b.legendScale=1,b.legendDragOn=!0,b.mapDragOn=!0,b},b.prototype.exampleMapConfig=function(){var a={};return a.datasource="data/world-population.geo.json",a.fileName="world-population.geo.json",a.fileSize="4279065",a.fileType="geojson",a.projection="eckert4",a.colorProperty="POP2005",a.mapOffset=[12,0],a.graticuleOn=!0,a.globeOn=!0,a.colorOn=!0,a.legendTitle="2005 Population",a.legendFormatterString=",f0",a.legendFormatter=d3.format(a.legendFormatterString),a.tooltipContentTemplate='<strong><%= p.NAME %></strong> <br> Population: <%= d3.format(",f0")(p.POP2005) %>',a.tooltipContent=function(b){return _.template(a.tooltipContentTemplate)({p:b.properties})},a},b.prototype.render=function(){return this.mapConfig=new this.TulipMapConfigurationModel(_.extend(this.defaultMapConfig(),this.exampleMapConfig()),{app:this}),this.appView=new this.TulipMainAppView({el:this.el,app:this}).render(),this},b}()}(jQuery),function(a){a.prototype.TulipMapConfigurationModel=Backbone.Model.extend({initialize:function(a,b){this.options=b;var c=[{value:"albersUsa",label:"Albers USA"},{value:"azimuthalEqualArea",label:"Azimuthal Equal Area"},{value:"azimuthalEquidistant",label:"Azimuthal Equidistant"},{value:"conicEqualArea",label:"Conic Equal Area"},{value:"conicConformal",label:"Conic Conformal"},{value:"conicEquidistant",label:"Conic Equidistant"},{value:"equirectangular",label:"Equirectangle"},{value:"gnomonic",label:"Gnomonic"},{value:"mercator",label:"Mercator"},{value:"orthographic",label:"Orthographic"},{value:"stereographic",label:"Stereographic"},{value:"transverseMercator",label:"Transverse Mercator"}];c=_.isArray(b.app.options.projectionOptions)&&0!==b.app.options.projectionOptions.length?b.app.options.projectionOptions:_.union(c,this.projectionOptionsExtended),this.projectionOptions=c},colorScaleOptions:[{value:"quantile",label:"Quantiles"},{value:"linear",label:"Linear"},{value:"identity",label:"Identity"},{value:"sqrt",label:"Square Root"},{value:"pow",label:"Power"},{value:"log",label:"Logarithmic"},{value:"quantize",label:"Quantize"}],projectionOptionsExtended:[{value:"aitoff",label:"Aitoff"},{value:"airy",label:"Airy’s minimum-error azimuthal"},{value:"albers",label:"Albers equal-area conic"},{value:"armadillo",label:"Armadillo"},{value:"august",label:"August conformal"},{value:"baker",label:"Baker Dinomic"},{value:"berghaus",label:"Berghaus Star"},{value:"boggs",label:"Boggs eumorphic"},{value:"bonne",label:"Bonne"},{value:"bromley",label:"Bromley"},{value:"chamberlin",label:"Chamberlin trimetric"},{value:"collignon",label:"Collignon"},{value:"conicEquidistant",label:"conic equidistant"},{value:"craig",label:"Craig retroazimuthal"},{value:"craster",label:"Craster parabolic"},{value:"cylindricalEqualArea",label:"cylindrical equal-area, Gall–Peters"},{value:"cylindricalStereographic",label:"cylindrical stereographic, Gall’s stereographic"},{value:"eckert1",label:"Eckert I"},{value:"eckert2",label:"Eckert II"},{value:"eckert3",label:"Eckert III"},{value:"eckert4",label:"Eckert IV"},{value:"eckert5",label:"Eckert V"},{value:"eckert6",label:"Eckert VI"},{value:"eisenlohr",label:"Eisenlohr conformal"},{value:"fahey",label:"Fahey"},{value:"foucaut",label:"Foucaut"},{value:"gilbert",label:"Gilbert’s two-world perspective"},{value:"ginzburg4",label:"Ginzburg IV"},{value:"ginzburg5",label:"Ginzburg V"},{value:"ginzburg6",label:"Ginzburg VI"},{value:"ginzburg8",label:"Ginzburg VIII"},{value:"ginzburg9",label:"Ginzburg IX"},{value:"gringorten",label:"Gringorten"},{value:"guyou",label:"Guyou hemisphere-in-a-square"},{value:"hammer",label:"Hammer, Eckert–Greifendorff, quartic authalic, Briesemeister"},{value:"hammerRetroazimuthal",label:"Hammer retroazimuthal"},{value:"healpix",label:"HEALPix"},{value:"hill",label:"Hill eucyclic, Maurer No. 73"},{value:"homolosine",label:"Goode homolosine"},{value:"kavrayskiy7",label:"Kavrayskiy VII"},{value:"lagrange",label:"Lagrange conformal"},{value:"larrivee",label:"Larrivée"},{value:"laskowski",label:"Laskowski tri-optimal"},{value:"littrow",label:"Littrow"},{value:"loximuthal",label:"loximuthal"},{value:"miller",label:"Miller"},{value:"modifiedStereographic",label:"modified stereographic"},{value:"mollweide",label:"Mollweide, Atlantis"},{value:"mtFlatPolarParabolic",label:"McBryde–Thomas flat-polar parabolic"},{value:"mtFlatPolarQuartic",label:"McBryde–Thomas flat-polar quartic"},{value:"mtFlatPolarSinusoidal",label:"McBryde–Thomas flat-polar sinusoidal"},{value:"naturalEarth",label:"Natural Earth"},{value:"nellHammer",label:"Nell–Hammer"},{value:"peirceQuincuncial",label:"Pierce quincuncial"},{value:"polyconic",label:"polyconic"},{value:"rectangularPolyconic",label:"rectangular polyconic"},{value:"robinson",label:"Robinson"},{value:"satellite",label:"satellite (tilted perpsective)"},{value:"sinusoidal",label:"sinusoidal"},{value:"sinuMollweide",label:"Sinu-Mollweide"},{value:"times",label:"Times"},{value:"twoPointAzimuthal",label:"two-point azimuthal"},{value:"twoPointEquidistant",label:"two-point equidistant"},{value:"vanDerGrinten",label:"Van der Grinten"},{value:"vanDerGrinten2",label:"Van der Grinten II"},{value:"vanDerGrinten3",label:"Van der Grinten III"},{value:"vanDerGrinten4",label:"Van der Grinten IV"},{value:"wagner4",label:"Wagner IV, Putniṇš P2´"},{value:"wagner6",label:"Wagner VI"},{value:"wagner7",label:"Wagner VII"},{value:"wiechel",label:"Wiechel"},{value:"winkel3",label:"Winkel tripel"}]})}(Tulip,jQuery),function(a,b,c){a.prototype.TulipMainAppView=Backbone.View.extend({initialize:function(a){this.templates=a.app.templates},events:{},render:function(){return this.$el.html(_.template(this.templates["application.html"])({})),this.renderMap().renderConfig(),this},renderConfig:function(){return this.configView=new this.options.app.TulipConfigView({el:this.$el.selector+" .tulip-config-container",app:this.options.app,map:this.mapView,model:this.options.app.mapConfig}).render(),this},renderMap:function(){return this.mapView=new this.options.app.TulipMapView({el:this.$el.selector+" .tulip-map-container",app:this.options.app,model:this.options.app.mapConfig}).render(),this}}),a.prototype.TulipConfigView=Backbone.View.extend({model:a.prototype.TulipMapConfigurationModel,initialize:function(a){var b=this;this.templates=a.app.templates,this.model.on("change",function(){b.options.map.render()}),this.options.map.on("mapDataLoaded",function(){b.stickit()}),this.options.map.on("mapRendered",function(){b.handleRender()})},events:{"click .tulip-export-image":"handleExportImage"},bindings:{".tulip-configuration-fileName":{observe:"fileName"},".tulip-configuration-fileSize":{observe:"fileSize"},".tulip-configuration-fileType":{observe:"fileType"},"#tulip-configuration-width":{observe:"width",events:["blur","change","cut","paste"]},"#tulip-configuration-height":{observe:"height",events:["blur","change","cut","paste"]},"#tulip-configuration-stylesBackground":{observe:"stylesBackground",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-mapOffset0":{observe:"mapOffset",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("mapOffset")[0]},onSet:function(a){var b=_.clone(this.model.get("mapOffset"));return b[0]=parseFloat(a),b}},"#tulip-configuration-mapOffset1":{observe:"mapOffset",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("mapOffset")[1]},onSet:function(a){var b=_.clone(this.model.get("mapOffset"));return b[1]=parseFloat(a),b}},"#tulip-configuration-projection":{observe:"projection",selectOptions:{collection:function(){return this.model.projectionOptions}}},"#tulip-configuration-rotation0":{observe:"rotation",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("rotation")[0]},onSet:function(a){var b=_.clone(this.model.get("rotation"));return b[0]=parseFloat(a),b}},"#tulip-configuration-rotation1":{observe:"rotation",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("rotation")[1]},onSet:function(a){var b=_.clone(this.model.get("rotation"));return b[1]=parseFloat(a),b}},"#tulip-configuration-rotation2":{observe:"rotation",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("rotation")[2]},onSet:function(a){var b=_.clone(this.model.get("rotation"));return b[2]=parseFloat(a),b}},"#tulip-configuration-styles":{observe:"styles",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-stylesHover":{observe:"stylesHover",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-colorOn":{observe:"colorOn"},"#tulip-configuration-colorProperty":{observe:"colorProperty",selectOptions:{collection:function(){var a=[],b=this.options.map.smd;return _.isObject(b.data)&&_.isObject(b.data.features)&&_.each(b.data.features[0].properties,function(b,c){a.push({value:c,label:c})}),a}}},"#tulip-configuration-colorSet":{observe:"colorSet",selectOptions:{collection:function(){var a=SimpleMapD3(),b=[];return _.each(a.brewer,function(a,c){b.push({value:c,label:c})}),b}}},"#tulip-configuration-colorScale":{observe:"colorScale",selectOptions:{collection:function(){return this.model.colorScaleOptions}}},"#tulip-configuration-colorReverse":{observe:"colorReverse"},"#tulip-configuration-tooltipOn":{observe:"tooltipOn"},"#tulip-configuration-tooltipContent":{observe:"tooltipContent",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("tooltipContentTemplate")},onSet:function(a){return this.model.set("tooltipContentTemplate",a,{silent:!0}),function(b){return _.template(a)({p:b.properties})}}},"#tulip-configuration-legendOn":{observe:"legendOn"},"#tulip-configuration-legendTitle":{observe:"legendTitle"},"#tulip-configuration-legendScale":{observe:"legendScale"},"#tulip-configuration-legendFormatter":{observe:"legendFormatter",onGet:function(){return this.model.get("legendFormatterString")},onSet:function(a){return this.model.set("legendFormatterString",a,{silent:!0}),d3.format(a)}},"#tulip-configuration-stylesLegendContainer":{observe:"stylesLegendContainer",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-stylesLegendTitleText":{observe:"stylesLegendTitleText",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-stylesLegendText":{observe:"stylesLegendText",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-stylesLegendSwatch":{observe:"stylesLegendSwatch",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-legendOffset0":{observe:"legendOffset",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("legendOffset")[0]},onSet:function(a){var b=_.clone(this.model.get("legendOffset"));return b[0]=parseFloat(a),b}},"#tulip-configuration-legendOffset1":{observe:"legendOffset",events:["blur","change","cut","paste"],onGet:function(){return this.model.get("legendOffset")[1]},onSet:function(a){var b=_.clone(this.model.get("legendOffset"));return b[1]=parseFloat(a),b}},"#tulip-configuration-legendDragOn":{observe:"legendDragOn"},"#tulip-configuration-mapDragOn":{observe:"mapDragOn"},"#tulip-configuration-canvasDragOn":{observe:"canvasDragOn"},"#tulip-configuration-graticuleOn":{observe:"graticuleOn"},"#tulip-configuration-globeOn":{observe:"globeOn"},"#tulip-configuration-stylesGraticule":{observe:"stylesGraticule",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}},"#tulip-configuration-stylesGlobe":{observe:"stylesGlobe",events:["blur","change","cut","paste"],onGet:function(a){return JSON.stringify(a)},onSet:function(a){return JSON.parse(a)}}},render:function(){return this.$el.html(_.template(this.templates["configuration.html"])({})),this.stickit(),this.handleUpload().makeAttributePicker(),this},handleRender:function(){var a=this;a.options.map.smd.dragSimple.on("dragend",function(b){var c=d3.select(this),d=[b.x,b.y];c.classed("smd-draggable-map-group")?a.model.set("mapOffset",d):a.model.set("legendOffset",d)})},handleUpload:function(){var a=this;return this.$upload=this.$el.find(".tulip-input-file"),this.$upload.on("dragover dragenter",function(a){a.stopPropagation(),a.preventDefault(),b(this).addClass("hovered"),a.originalEvent.dataTransfer.dropEffect="copy"}),this.$upload.on("dragexit",function(a){a.stopPropagation(),a.preventDefault(),b(this).removeClass("hovered")}),this.$upload.on("drop",function(b){b.stopPropagation(),b.preventDefault();var c=b.originalEvent.dataTransfer.files;c.length>0&&a.readFile(c[0])}),this},readFile:function(a){var b=this,d=new FileReader;d.onload=function(d){var e,f;try{if(e=JSON.parse(d.target.result),0===_.size(e)||_.isUndefined(e.type))return!1;if(["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","Feature","FeatureCollection"].indexOf(e.type)>=0)f="geojson";else{if("Topology"!==e.type)return!1;f="topology"}}catch(g){return!1}b.model.set({datasource:c,fileName:a.name,fileSize:a.size,fileType:f},{silent:!0}),b.model.set("data",e),b.model.set("colorProperty",_.keys(b.options.map.smd.data.features[0].properties)[0])},d.readAsText(a)},handleExportImage:function(a){a.preventDefault(),b(a.currentTarget);var c,d=_.uniqueId("tulip-id-"),e=this.options.map;e.$mapEl.find("svg").attr("id",d),c=Pancake(d),c.download("map.png")},makeAttributePicker:function(){var a=this,c=_.template(this.templates["attribute-picker.html"]),d={stroke:"color","stroke-width":"measurement","stroke-opacity":"percent",fill:"color","fill-opacity":"percent","font-family":"font-family","font-size":"measurement"};return this.$el.find(".tulip-attribute-picker").each(function(){var e,f=b(this),g=f.parent().find("label[for="+f.attr("id")+"]");f.wrap('<div class="tulip-attribute-picker-container"></div>'),f.parent().append(c({attributes:d,values:JSON.parse(f.val())})),e=f.parent().find(".tulip-attribute-picker-picker"),g.addClass("tulip-attribute-picker-label"),f.addClass("tulip-invisible"),e.find("input[data-type=color]").spectrum({showInput:!0,showPalette:_.isArray(a.options.app.options.palette)?!0:!1,palette:a.options.app.options.palette,clickoutFiresChange:!0,showInitial:!0,showButtons:!1,preferredFormat:"hex"}),f.on("click focus",function(){e.slideDown()}),g.on("click focus",function(){e.slideDown()}),e.find(".tulip-attribute-picker-done").on("click",function(a){a.preventDefault();var c={};e.find(".tulip-attribute").each(function(){b(this);var a=b(this).find("input"),d=b(this).find("label");
""!==a.val()&&(c[d.data("attribute")]=a.val())}),f.val(JSON.stringify(c)),e.slideUp(function(){f.trigger("change")})})}),this}}),a.prototype.TulipMapView=Backbone.View.extend({model:a.prototype.TulipMapConfigurationModel,initialize:function(a){this.templates=a.app.templates,this.mapEl=this.$el.selector+" .tulip-map",this.$mapEl=b(this.mapEl)},events:{},loading:function(){this.$mapEl.html(_.template(this.templates["loading.html"])({}))},render:function(a){var c=this;return a=_.extend(this.model.toJSON(),a),a.container=this.mapEl,a.startManually=!0,this.$mapEl.css("width",a.width),["100%","auto"].indexOf(a.height)>=0?this.$mapEl.css("height",b(window).height()-5+"px"):this.$mapEl.css("height",a.height),this.$mapEl.html(""),this.smd=SimpleMapD3(a),this.smd.events.on("dataLoaded",function(){c.trigger("mapDataLoaded")}),this.smd.events.on("rendered",function(){c.trigger("mapRendered")}),this.smd.start(),this}})}(Tulip,jQuery,void 0);